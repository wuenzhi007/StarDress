name: React Native Build

on:
  # push:
  #   branches: [ main, master, develop ]
  # pull_request:
  #   branches: [ main, master ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to build for'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging
          - development

jobs:
  android-build:
    name: Android Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew

      - name: Create .env file
        run: |
          touch .env
          echo "API_URL=${{ github.event.inputs.environment == 'production' && 'https://api.production.com' || github.event.inputs.environment == 'staging' && 'https://api.staging.com' || 'https://api.development.com' }}" >> .env
          echo "ENV=${{ github.event.inputs.environment || 'development' }}" >> .env

      - name: Build Android APK
        run: |
          cd android
          ./gradlew assembleRelease --no-daemon

      - name: Build Android App Bundle (AAB)
        run: |
          cd android
          ./gradlew bundleRelease --no-daemon

      - name: Sign Android release
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: android/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Sign AAB
        uses: r0adkll/sign-android-release@v1
        id: sign_aab
        with:
          releaseDirectory: android/app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Rename APK and AAB
        run: |
          mkdir -p artifacts
          cp ${{ steps.sign_app.outputs.signedReleaseFile }} artifacts/app-release-${{ github.event.inputs.environment || 'development' }}-${{ github.sha }}.apk
          cp ${{ steps.sign_aab.outputs.signedReleaseFile }} artifacts/app-release-${{ github.event.inputs.environment || 'development' }}-${{ github.sha }}.aab

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: artifacts/app-release-*.apk
          retention-days: 14

      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: artifacts/app-release-*.aab
          retention-days: 14

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/app-release-*.apk
            artifacts/app-release-*.aab
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}